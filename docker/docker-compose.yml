version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: cotizate-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: cotizate_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cotizate-network

  inbucket:
    image: inbucket/inbucket:latest
    container_name: cotizate-inbucket
    restart: unless-stopped
    ports:
      - "2500:2500"  # SMTP
      - "9000:9000"  # Web UI
      - "1100:1100"  # POP3
    networks:
      - cotizate-network

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.dev
    container_name: cotizate-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/cotizate_db?schema=public
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      JWT_EXPIRES_IN: 7d
      API_VERSION: v1
      CORS_ORIGIN: http://localhost:3000
      EMAIL_PROVIDER: inbucket
      SMTP_HOST: inbucket
      SMTP_PORT: 2500
    volumes:
      - ../src:/app/src
      - ../prisma:/app/prisma
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      inbucket:
        condition: service_started
    networks:
      - cotizate-network
    command: sh -c "npx prisma migrate deploy && npm run dev"

volumes:
  postgres_data:

networks:
  cotizate-network:
    driver: bridge